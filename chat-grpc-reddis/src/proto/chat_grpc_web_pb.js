/**
 * @fileoverview gRPC-Web generated client stub for chatpackage
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v3.21.12
// source: chat.proto

/* eslint-disable */
// @ts-nocheck

const grpc = {};
grpc.web = require("grpc-web");

const proto = {};
proto.chatpackage = require("./chat_pb.js");

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.chatpackage.ChatClient = function (hostname, credentials, options) {
  if (!options) options = {};
  options.format = "text";

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, "");
};

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.chatpackage.ChatPromiseClient = function (
  hostname,
  credentials,
  options
) {
  if (!options) options = {};
  options.format = "text";

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, "");
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.chatpackage.Yohorequest,
 *   !proto.chatpackage.YohoResponse>}
 */
const methodDescriptor_Chat_Yoho = new grpc.web.MethodDescriptor(
  "/chatpackage.Chat/Yoho",
  grpc.web.MethodType.UNARY,
  proto.chatpackage.Yohorequest,
  proto.chatpackage.YohoResponse,
  /**
   * @param {!proto.chatpackage.Yohorequest} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.chatpackage.YohoResponse.deserializeBinary
);

/**
 * @param {!proto.chatpackage.Yohorequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.chatpackage.YohoResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.chatpackage.YohoResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.chatpackage.ChatClient.prototype.yoho = function (
  request,
  metadata,
  callback
) {
  return this.client_.rpcCall(
    this.hostname_ + "/chatpackage.Chat/Yoho",
    request,
    metadata || {},
    methodDescriptor_Chat_Yoho,
    callback
  );
};

/**
 * @param {!proto.chatpackage.Yohorequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.chatpackage.YohoResponse>}
 *     Promise that resolves to the response
 */
proto.chatpackage.ChatPromiseClient.prototype.yoho = function (
  request,
  metadata
) {
  return this.client_.unaryCall(
    this.hostname_ + "/chatpackage.Chat/Yoho",
    request,
    metadata || {},
    methodDescriptor_Chat_Yoho
  );
};

module.exports = proto.chatpackage;
